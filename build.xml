<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:ivy="antlib:org.apache.ivy.ant" name="NAMControllerCompiler" default="dist" basedir=".">
    <property name="targetversion" value="1.6" />
    <property name="project.version" value="0.3.4" />
    <property name="MyApp" value="${ant.project.name}_${project.version}" />
    <property name="MyApp.jar" value="${MyApp}.jar" />
    <property name="src" location="src" relative="true" />
    <property name="bin" location="bin" relative="true" />
    <property name="lib" location="lib" relative="true" />
    <property name="doc" location="doc" relative="true" />
    <property name="dist" location="dist" relative="true" />
    <property name="xml.resources" location="resources/xml" relative="true" />
    <property name="rul2.structure.file" value="RUL2_IID_structure" />
    
    <path id="build.classpath">
        <fileset dir="${lib}" includes="jDBPFX*.jar" />
        <pathelement path="${bin}" />
    </path>
    
    <pathconvert property="manifest.build.classpath" pathsep=" ">
        <path refid="build.classpath"/>
        <mapper>
            <chainedmapper>
                <flattenmapper/>
                <globmapper from="*.jar" to="lib/*.jar"/>
            </chainedmapper>
        </mapper>
    </pathconvert>
    
    <target name="resolve" description="retrieve dependencies with ivy">
        <ivy:retrieve conf="mainapp"/>
    </target>
    
    <target name="clean" description="delete generated files">
        <delete dir="${bin}" />
        <delete dir="${doc}" />
        <delete dir="${dist}" />
    </target>
    
    <target name="compile" depends="resolve" description="compile the sources">
        <mkdir dir="${bin}" />
        <javac target="${targetversion}" srcdir="${src}" destdir="${bin}" includeantruntime="false">
            <classpath refid="build.classpath" />
        </javac>
    </target>
    
    <target name="doc" depends="compile" description="generate documentation">
        <mkdir dir="${doc}" />
        <javadoc
            sourcepath="${src}"
            destdir="${doc}"
            packagenames="*"
            link="http://docs.oracle.com/javase/7/docs/api/"
            classpathref="build.classpath"
        />
    </target>
    
    <target name="batchfiles" description="generate batch files">
        <echo file="${MyApp}.bat">java -jar ${MyApp}.jar</echo>
        <echo file="${MyApp}_developer.bat">java -jar ${MyApp}.jar dev</echo>
        <echo file="${MyApp}_debug.bat">java -jar ${MyApp}.jar debug</echo>
    </target>
    
    <target name="dist" depends="compile,resolve,batchfiles" description="create binary distribution">
    
        <!-- Initialization -->
        <delete file="${MyApp.jar}" />
        <delete dir="${dist}" />
        <mkdir dir="${dist}" />
        
        <!-- Create jar file -->
        <jar jarfile="${MyApp.jar}" basedir="${bin}">
            <manifest>
                <attribute name="Main-Class" value="controller.NAMControllerCompilerMain"/>
                <attribute name="Class-Path" value="${manifest.build.classpath}"/>
            </manifest>
        </jar>
        
        <!-- Create zip file with sources -->
        <zip destfile="${dist}/${MyApp}_sources.zip">
            <fileset dir="${basedir}" includes="${manifest.build.classpath}" />
            <fileset dir="${basedir}" includes="${MyApp}*,build.xml,ivy.xml" />
            <fileset dir="${basedir}" includes="${xml.resources}/${rul2.structure.file}.dtd" />
            <fileset dir="${basedir}" includes="${xml.resources}/${rul2.structure.file}_default.xml" />
            <zipfileset dir="${basedir}" includes="${xml.resources}/${rul2.structure.file}_default.xml" fullpath="${xml.resources}/${rul2.structure.file}.xml" />
            <fileset dir="${basedir}" includes="${src}/**" />            
        </zip>
        
        <!-- Create dist zip file -->
        <zip destfile="${dist}/${MyApp}.zip">
            <fileset dir="${basedir}" includes="${manifest.build.classpath}" />
            <fileset dir="${basedir}" includes="${MyApp}*" />
            <fileset dir="${basedir}" includes="${xml.resources}/${rul2.structure.file}.dtd" />
            <zipfileset dir="${basedir}" includes="${xml.resources}/${rul2.structure.file}_default.xml" fullpath="${xml.resources}/${rul2.structure.file}.xml" />
        </zip>
        
    </target>
    
</project>